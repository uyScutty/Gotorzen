@page "/packages/edit/{id:int}"
@using Gotorz.ViewModels
@using Gotorz.Services
@inject TravelpackageService TravelpackageService
@inject NavigationManager Navigation

<h3>Rediger pakke</h3>

@if (formModel == null)
{
    <p><em>Indlæser...</em></p>
}
else
{
    @if (showSuccessMessage)
    {
        <div class="alert alert-success">
            Pakken blev gemt!
        </div>
    }

    <EditForm Model="formModel" OnValidSubmit="SaveChanges">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label>Afrejsedato</label>
            <InputDate @bind-Value="formModel.DepartureDate" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Returdato</label>
            <InputDate @bind-Value="formModel.ReturnDate" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Destination</label>
            <InputText @bind-Value="formModel.Destination" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Beskrivelse</label>
            <InputTextArea @bind-Value="formModel.Description" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Billede (URL)</label>
            <InputText @bind-Value="formModel.ImageUrl" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Manuel pris</label>
            <InputNumber @bind-Value="formModel.ManualPriceOverride" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Markup %</label>
            <InputNumber @bind-Value="formModel.MarkupPercent" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Gem ændringer</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Annuller</button>
    </EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }

    private TravelPackageFormViewModel? formModel;
    private bool showSuccessMessage = false;


    protected override async Task OnInitializedAsync()
    {
        formModel = await TravelpackageService.GetPackageForEditAsync(id);
    }

    private async Task SaveChanges()
    {
        if (formModel != null)
        {
            await TravelpackageService.UpdateTravelPackageAsync(id, formModel);
            showSuccessMessage = true;
            await Task.Delay(1500); // Vis besked i 1.5 sekund
            Navigation.NavigateTo("/packages");
        }
    }


    private void Cancel()
    {
        Navigation.NavigateTo("/packages");
    }
}

